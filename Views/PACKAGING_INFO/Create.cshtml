@model WebApplication1.Models.PACKAGING_INFO

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "PACKAGING_INFO", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>PACKAGING_INFO</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
            <a>PHOTO A</a>
        <div class="col-md-10">
            @Html.TextBox("photoA", "", new { type = "file" }) <br />
        </div>
    </div>

    <div class="form-group">
        <a>PHOTO B</a>
        <div class="col-md-10">
            @Html.TextBox("photoB", "", new { type = "file" }) <br />
        </div>
    </div>

    <div class="form-group">
        <a>PHOTO C</a>
        <div class="col-md-10">
            @Html.TextBox("photoC", "", new { type = "file" }) <br />
        </div>
    </div>

    <div class="form-group">
        <a>
            Part Number
        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PART_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PART_NUMBER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <a>
            External packaging method
        </a>
        <div class="col-md-10">
            <div class="col-md-10">
                @{
                    List<SelectListItem> expPackMethod = new List<SelectListItem>();
                    expPackMethod.Add(new SelectListItem { Text = "Carton", Value = "Carton" });
                    expPackMethod.Add(new SelectListItem { Text = "Bin", Value = "Bin" });
                    expPackMethod.Add(new SelectListItem { Text = "Pack", Value = "Pack" });
                    expPackMethod.Add(new SelectListItem { Text = "PP Bin", Value = "PP Bin" });
                }

                @(Html.DropDownListFor(model => model.EXT_PCK_METHOD, expPackMethod, new { @class = "form-control" }))
            </div>
        </div>
    </div>

    <div class="form-group">
        <a>
            Internal packaging method
        </a>
        <div class="col-md-10">
            @{
                List<SelectListItem> intPackMethd = new List<SelectListItem>();
                intPackMethd.Add(new SelectListItem { Text = "Pack", Value = "Pack" });
                intPackMethd.Add(new SelectListItem { Text = "Plastic", Value = "Plastic" });
                intPackMethd.Add(new SelectListItem { Text = "Bag", Value = "Bag" });
                intPackMethd.Add(new SelectListItem { Text = "Tray", Value = "Tray" });
                intPackMethd.Add(new SelectListItem { Text = "Reel", Value = "Reel" });
                intPackMethd.Add(new SelectListItem { Text = "Tube", Value = "Tube" });
                intPackMethd.Add(new SelectListItem { Text = "Layer", Value = "Layer" });
                intPackMethd.Add(new SelectListItem { Text = "Partition", Value = "Partition" });
                intPackMethd.Add(new SelectListItem { Text = "Box", Value = "Box" });
                intPackMethd.Add(new SelectListItem { Text = "Tupperware", Value = "Tupperware" });
            }

            @(Html.DropDownListFor(model => model.INT_PACK_METHOD, intPackMethd, new { @class = "form-control" }))
        </div>
    </div>




    <div class="container-fluid">
        <div class="row">
            <div class="form-group">
                <a>External Package Width</a>
                <div class="col-md-10">

                    @Html.EditorFor(model => model.EXT_PCK_WIDTH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EXT_PCK_WIDTH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <a>
                    External Package Height
                </a>
                <div class="col-md-10">

                    @Html.EditorFor(model => model.EXT_PCK_HEIGHT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EXT_PCK_HEIGHT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <a>
                    External Package Length
                </a>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EXT_PCK_LENGTH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EXT_PCK_LENGTH, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="form-group">
                <a>
                    Internal Package Width
                </a>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.INT_PCK_WIDTH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.INT_PCK_WIDTH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <a>
                    Internal Package Height

                </a>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.INT_PCK_HEIGHT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.INT_PCK_HEIGHT, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <a>
                    Internal Package Length

                </a>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.INT_PCK_LENGTH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.INT_PCK_LENGTH, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div class="form-group">
        <a>
            Internal Package Quantity

        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.INT_PCK_QTY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.INT_PCK_QTY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <a>
            Total number of Internal
        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TOTAL_NUMBER_OF_INT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TOTAL_NUMBER_OF_INT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <a>
            Packaging Total Quantity
        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PCK_TOTAL_QTY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PCK_TOTAL_QTY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <a>
            Weight (kg)
        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.WEIGHT_KG, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WEIGHT_KG, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <a>
            Remarks
        </a>
        <div class="col-md-10">
            @Html.EditorFor(model => model.REMARKS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
